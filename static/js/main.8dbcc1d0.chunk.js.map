{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","todo","curentUser","users","find","user","className","href","TodoInfo","TodoList","todos","map","App","useState","usersFromServer","setUsers","todosFromServer","setTodos","setTitle","errortTitle","setErrorTitle","selectUserId","setSelectUserId","errorSelectUserId","setErrorSelectUserId","action","method","onSubmit","event","preventDefault","trim","length","prev","Math","max","value","type","placeholder","onChange","target","onBlur","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8dbcc1d0.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../props/userProps';\nimport { Todo } from '../../props/todoProps';\n\ntype UserInfoProps = {\n  todo: Todo;\n  users: User[];\n};\n\nexport const UserInfo: React.FC<UserInfoProps> = ({ todo, users }) => {\n  const curentUser = users.find(user => user.id === todo.userId);\n\n  return (\n    <>\n      {curentUser && (\n        <a className=\"UserInfo\" href={`mailto:${curentUser.email}`}>\n          {curentUser.name}\n        </a>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../props/todoProps';\nimport { User } from '../../props/userProps';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n  users: User[],\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo, users }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={`TodoInfo ${todo.completed ? 'TodoInfo--completed' : ''}`}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo\n        todo={todo}\n        users={users}\n      />\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../props/todoProps';\nimport { User } from '../../props/userProps';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n  users: User[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, users }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo: Todo) => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n          users={users}\n        />\n      ))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList/TodoList';\nimport './App.scss';\n\nexport const App = () => {\n  const [users, setUsers] = useState(usersFromServer);\n  const [todos, setTodos] = useState(todosFromServer);\n\n  const [title, setTitle] = useState('');\n  const [errortTitle, setErrorTitle] = useState(false);\n\n  const [selectUserId, setSelectUserId] = useState(0);\n  const [errorSelectUserId, setErrorSelectUserId] = useState(false);\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setErrorTitle(false);\n  };\n\n  function errorTitleBlur() {\n    if (!title.trim()) {\n      setErrorTitle(true);\n    }\n  }\n\n  const handleSelectUserId = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setSelectUserId(+event.target.value);\n    setErrorSelectUserId(false);\n  };\n\n  const createNewTodo = () => {\n    const id = todos.length > 0 ? Math.max(\n      ...todos.map(todo => todo.id),\n    ) + 1 : 1;\n\n    return {\n      id,\n      title,\n      completed: false,\n      userId: +selectUserId,\n    };\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title.trim() || selectUserId === 0) {\n      setErrorTitle(!title.trim());\n      setErrorSelectUserId(selectUserId === 0);\n\n      return;\n    }\n\n    if (users.length > 0) {\n      setTodos(prev => [\n        ...prev,\n        createNewTodo(),\n      ]);\n\n      setSelectUserId(0);\n      setTitle('');\n    }\n\n    setUsers(usersFromServer);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            name=\"title\"\n            value={title}\n            type=\"text\"\n            placeholder=\"title\"\n            data-cy=\"titleInput\"\n            onChange={handleTitle}\n            onBlur={() => errorTitleBlur()}\n          />\n          {errortTitle\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            name=\"user\"\n            value={selectUserId}\n            data-cy=\"userSelect\"\n            onChange={handleSelectUserId}\n          >\n            <option value={0} disabled>Choose a user</option>\n            {users.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {errorSelectUserId && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todos}\n        users={users}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}